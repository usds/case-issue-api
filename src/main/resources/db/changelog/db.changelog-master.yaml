x-ref-data:
   type-defs:
      - &idtype bigint
      - &string varchar(255)
      - &user_date timestamp with time zone # a date that may come from outside, which may include time zone information that we may want to preserve
      - &session_timestamp bigint
   column-defs:
      - column: &pk_column
          name: internal_id
          type: *idtype
          remarks: The internal database identifier for this entity.
          constraints:
            primaryKey: true
            nullable: false
      - column: &created_at_column
          name: created_at
          type: DATETIME
          remarks: The creation timestamp for this entity.
          constraints:
            nullable: false
      - column: &created_by_column
          name: created_by
          type: *string
          remarks: The ID of the user who created this entity.
          constraints:
            nullable: true
      - column: &updated_at_column
          name: updated_at
          type: DATETIME
          remarks: The timestamp for the most recent update of this entity.
          constraints:
            nullable: false
      - column: &updated_by_column
          name: updated_by
          type: *string
          remarks: The ID of the user who most recently updated this entity.
          constraints:
            nullable: true
      - column: &tag_column
          name: external_id
          type: *string
          remarks: The external ID (or "tag") used by the API to identify this entity (URL-safe string).
          constraints:
            unique: true
            nullable: false
      - column: &name_column
          name: name
          type: *string
          remarks: The human-readable name of this entity (may contain spaces and punctuation).
          constraints:
            nullable: false
      - column: &description_column
          name: description
          type: *string
          remarks: A longer (optional) plain-language description of this entity, for use in wider list views.
      - column: &session_timestamp_column
          type: *session_timestamp
          constraints:
            nullable: false

databaseChangeLog:
  - property:
      name: attribute_bytes_type
      value: BYTEA
      dbms: postgresql
  - property:
      name: attribute_bytes_type
      value: LONGVARBINARY
      dbms: hsqldb
  - property:
      name: attribute_bytes_type
      value: BLOB
  - changeSet:
      id: initial-schema
      author: ben.warfield@usds.dhs.gov
      comment: The database schema required for the initial pilot deployment of the Case Issue API.
      changes:
        - createSequence:
            sequenceName: case_issue_entity_id_sequence
            startValue: 1
            incrementBy: 50
        - createTable:
            tableName: case_management_system
            remarks: Case Management Systems that are known to this application (each case belongs to exactly one case management system).
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column: *tag_column
              - column: *name_column
              - column: *description_column
              - column:
                  name: application_url
                  type: *string
                  remarks: The root URL for the best available web view of this case management system.
              - column:
                  name: case_details_url_template
                  type: *string
                  remarks: A URL template for generating direct hyperlinks to cases in this case management system.
        - createTable:
            tableName: case_type
            remarks: Types of case that this application distinguishes between (each case can have only one type).
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column: *tag_column
              - column: *name_column
              - column: *description_column
        - createTable:
            tableName: trouble_case
            remarks: A case that has been entered into this application as having some issue that needs to be tracked (therefore by definition a trouble case of some kind).
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: case_management_system_internal_id
                  remarks: The case management system where this case is being tracked outside of this application.
                  type: *idtype
                  constraints:
                    nullable: false
                    foreignKeyName: fk__trouble_case__case_management_system
                    references: case_management_system
              - column:
                  name: receipt_number
                  type: *string
                  remarks: The unique identifier for a case, as understood by the case management system that owns it.
                  constraints:
                    nullable: false
              - column:
                  name: case_creation
                  type: *user_date
                  remarks: The date and time when this case was originally created (e.g. the form or letter was received). Immutable.
                  constraints:
                    nullable: false
              - column:
                  name: case_type_internal_id
                  remarks: What type of case this is (e.g. what form or what category of letter or inquiry). Immutable.
                  type: *idtype
                  constraints:
                    nullable: false
                    foreignKeyName: fk__trouble_case__case_type
                    references: case_type
              - column:
                  name: extra_data
                  type: varchar(32000)
                  remarks: Additional data about this case, as of the time it was most recently updated in this application. Mutable.
        - addUniqueConstraint:
            tableName: trouble_case
            constraint_name: uk__trouble_case
            columnNames: case_management_system_internal_id, receipt_number
        - createTable:
            tableName: case_issue
            remarks: An issue (e.g. "assigned to an invalid queue") that exists for some period of time with a specific case.
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: issue_case_internal_id
                  type: *idtype
                  remarks: The case that this issue is about.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__case_issue__trouble_case
                    references: trouble_case
              - column:
                  name: issue_type
                  type: *string
                  remarks: The type of this issue, as a URL-safe string (e.g. "AGING").
              - column:
                  name: issue_created
                  type: *user_date
                  remarks: The date this issue was first seen (likely but not necessarily the same as created_at).
                  constraints:
                    nullable: false
              - column:
                  name: issue_closed
                  type: *user_date
                  remarks: The date this issue was closed out.
                  constraints:
                    nullable: true
        - addUniqueConstraint:
            tableName: case_issue
            constraint_name: uk__case_issue
            columnNames: issue_case_internal_id, issue_type, issue_created
        - createTable:
            tableName: case_snooze
            remarks: An instance of a particular case being "snoozed" for a period of time.
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: snooze_case_internal_id
                  type: *idtype
                  remarks: The case that was snoozed.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__case_snooze__trouble_case
                    references: trouble_case
              - column:
                  name: snooze_reason
                  type: *string
                  remarks: The reason (as a URL-safe string) for snoozing this case (e.g. "TICKET_OPENED"). Immutable.
                  constraints:
                    nullable: false
              - column:
                  name: snooze_start
                  type: *user_date
                  remarks: The date and time when the case was snoozed. Immutable.
                  constraints:
                    nullable: false
              - column:
                  name: snooze_end
                  type: *user_date
                  remarks: The date and time when the snooze ended or will end.
                  constraints:
                    nullable: false
        - createTable:
            tableName: attachment_subtype
            remarks: A category of attachment (applying to one specific attachment type)
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column: *tag_column
              - column: *name_column
              - column: *description_column
              - column:
                  name: for_attachment_type
                  type: *string
                  remarks: Which type of attachment this subtype is applicable for.
                  constraints:
                    nullable: false
                    # check constraint would be appropriate but cannot be added inline,
                    # and postgresql has an Enum type anyway
              - column:
                  name: url_template
                  type: *string
                  remarks: The URL template for generating a link to attachments with this subtype (for attachments that are actually external tickets or the like).
        - createTable:
            tableName: case_attachment
            remarks: A note, annotation, or other attachment to a case (generally by way of a case_snooze). Immutable so as to be reusable.
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column:
                  name: attachment_type
                  type: *string
                  remarks: The type of this attachment, note or annotation (an enumerated type in Java, if not necessarily in the database).
                  constraints:
                    nullable: false
              - column:
                  name: attachment_subtype_internal_id
                  type: *idtype
                  remarks: The subtype (if applicable) for this attachment.
                  constraints:
                    nullable: true
                    foreignKeyName: fk__case_attachment__attachment_subtype
                    references: attachment_subtype
              - column:
                  name: content
                  remarks: The content of this attachment, note or annotation.
                  type: *string
                  constraints:
                    nullable: false
                    unique: true
        - createTable:
            tableName: case_attachment_association
            remarks: The association between an immutable attachment and snoozed case (by way of the snooze object).
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: snooze_internal_id
                  type: *idtype
                  remarks: The active case snooze for the annotated case when this association was created.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__case_attachment_association__case_snooze
                    references: case_snooze
              - column:
                  name: attachment_internal_id
                  type: *idtype
                  remarks: The attached content to associate with a case.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__case_attachment_association__case_attachment
                    references: case_attachment
        - addUniqueConstraint:
            tableName: case_attachment_association
            constraint_name: uk__case_attachment_association
            columnNames: snooze_internal_id, attachment_internal_id
  - changeSet:
      id: issue-upload-log
      author: ben.warfield@usds.dhs.gov
      comment: Record details about each upload of new issues/cases.
      changes:
        - createTable:
            tableName: case_issue_upload
            remarks: Information about when case issues were uploaded.
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: case_management_system_internal_id
                  remarks: The case management system where the uploaded cases are tracked outside of this application.
                  type: *idtype
                  constraints:
                    nullable: false
                    foreignKeyName: fk__case_issue_upload__case_management_system
                    references: case_management_system
              - column:
                  name: case_type_internal_id
                  remarks: What type of cases the uploaded issues are associated with (e.g. what form or what category of letter or inquiry).
                  type: *idtype
                  constraints:
                    nullable: false
                    foreignKeyName: fk__case_issue_upload__case_type
                    references: case_type
              - column:
                  name: issue_type
                  type: *string
                  remarks: The type of this issue, as a URL-safe string (e.g. "AGING").
              - column:
                  name: effective_date
                  type: *user_date
                  remarks: The effective date of this upload (will match issue_created/issue_closed in case_issue; likely but not necessarily the same as created_at).
                  constraints:
                    nullable: false
              - column:
                  name: upload_status
                  type: *string
                  remarks: The current status (e.g. in progress/completed/error) of this upload.
                  constraints:
                    nullable: false
              - column:
                  name: uploaded_record_count
                  type: bigint
                  remarks: The number of records (CSV rows or JSON objects) in the upload request.
                  constraints:
                    nullable: false
              - column:
                  name: new_issue_count
                  type: bigint
                  remarks: The number of new issues created by this request (if it was successfully processed at all).
              - column:
                  name: closed_issue_count
                  type: bigint
                  remarks: The number of existing issues closed by this request (if it was successfully processed at all).
  - changeSet:
      id: users-table
      author: tim.best@usds.dhs.gov
      comment: information about the users of the case-issue-api
      changes:
        - createTable:
            tableName: user_information
            remarks: Data about the users that login to the api.
            columns:
              - column: *pk_column
              - column: *created_at_column
              - column: *created_by_column
              - column: *updated_at_column
              - column: *updated_by_column
              - column:
                  name: print_name
                  type: *string
                  remarks: The human-readable name of this user (may contain spaces and punctuation).
                  constraints:
                    nullable: false
              - column:
                  name: user_id
                  type: *string
                  remarks: The external unique identifier for this user
                  constraints:
                    nullable: false
              - column:
                  name: last_seen
                  type: DATETIME
                  remarks: the last time this user has logged into the application
                  constraints:
                    nullable: false
  - changeSet:
      id: back-populate-users-table
      author: ben.warfield@usds.dhs.gov
      comment: Back-populate the user_information table with users whose names we had stored before, and normalize the created_by/updated_by fields.
      dbms: postgresql
      validCheckSum:
        - 8:9e470a2ba921eabc38016359d0cfeaef
        - 8:a1297187517147856b9712c2afb5b918
      changes:
        - sql:
            sql: SET search_path=${database.defaultSchemaName};
            comment: Force liquibase to find the correct schema, even for literal SQL migrations.
        - sqlFile:
            path: prepopulate-user-information.sql
            relativeToChangelogFile: true
        - sqlFile:
            path: repair-createdby-updatedby.sql
            relativeToChangelogFile: true
  - changeSet:
      id: add-unique-user-constraint
      author: ben.warfield@usds.dhs.gov
      comment: Add unique constraint for the external user ID in user_information.
      changes:
        - addUniqueConstraint:
            tableName: user_information
            constraint_name: uk__user_information
            columnNames: user_id
  - changeSet:
      id: tag-release-0.1.0
      author: ben.warfield@usds.dhs.gov
      comment: Tag the schema when we moved fully to postgresql, and away from HSQLDB.
      changes:
        - tagDatabase:
            tag: version_0.1.0
  - changeSet:
      id: jdbc-session-support
      author: ben.warfield@usds.dhs.gov
      comment: Tables required by Spring Session JDBC
      changes:
        - createTable:
            tableName: user_session
            remarks: Primary data store for logged-in user sessions. See also org.springframework.session.Session and org.springframework.session.jdbc.JdbcOperationsSessionRepository.
            columns:
              - column:
                  name: primary_id
                  type: char(36)
                  remarks: The internal (immutable) key to identify this session.
                  constraints:
                    nullable: false
                    primaryKey: true
                    primaryKeyName: pk__user_session
              - column:
                  name: session_id
                  type: char(36)
                  remarks: A unique (externally visible) string that identifies this session.
                  constraints:
                    nullable: false
                    unique: true
                    uniqueConstraintName: uk__user_session
              - column:
                  <<: *session_timestamp_column
                  name: creation_time
                  remarks: The time when this session was created.
              - column:
                  <<: *session_timestamp_column
                  name: last_access_time
                  remarks: The last time when this session was accessed.
              - column:
                  name: max_inactive_interval
                  type: int
                  remarks: The maximum inactive interval in (milliseconds) between requests before this session will be invalidated. A negative time indicates that the session will never timeout.
                  constraints:
                    nullable: false
              - column:
                  <<: *session_timestamp_column
                  name: expiry_time
                  remarks: The time at which this session will expire (always equal to last_access_time + max_inactive_interval).
              - column:
                  name: principal_name
                  type: varchar(100)
                  remarks: The name or unique ID of the user for this session.
        - createIndex:
            tableName: user_session
            indexName: ix__user_session_expiry_time
            columns:
              - column:
                  name: expiry_time
        - createIndex:
            tableName: user_session
            indexName: ix__user_session_principal_name
            columns:
              - column:
                  name: principal_name
        - createTable:
            tableName: user_session_attributes
            remarks: Normalized attribute store for logged-in user sessions.
            columns:
              - column:
                  name: session_primary_id
                  type: char(36)
                  remarks: The internal (immutable) key to identify this session.
                  constraints:
                    nullable: false
                    foreignKeyName: fk__user_session_attributes__user_session
                    references: user_session
                    deleteCascade: true
              - column:
                  name: attribute_name
                  type: varchar(200)
                  remarks: The unique name of this attribute.
                  constraints:
                    nullable: false
              - column:
                  name: attribute_bytes
                  type: ${attribute_bytes_type}
                  remarks: The stored value of the attribute.
                  constraints:
                    nullable: false
        - addPrimaryKey:
            tableName: user_session_attributes
            columnNames: session_primary_id, attribute_name
  - changeSet:
      id: filterable-case-view
      author: ben.warfield@usds.dhs.gov
      comment: Create view that exposes the case and snooze information we want for the main query API.
      changes:
        - createView:
            viewName: filterable_case_view
            selectQuery: |
              SELECT
                c.internal_id,
                c.created_at,
                c.created_by,
                c.updated_at,
                c.updated_by,
                c.case_management_system_internal_id,
                c.case_type_internal_id,
                c.receipt_number,
                c.case_creation,
                c.extra_data::jsonb as extra_data_converted,
                s.internal_id as snooze_id,
                s.snooze_reason,
                s.snooze_start,
                s.snooze_end,
                s.created_at snooze_created_at,
                s.created_by snooze_created_by,
                s.updated_at as snooze_updated_at,
                s.updated_by as snooze_updated_by,
                exists (
                  select case_issue.internal_id
                  from ${database.defaultSchemaName}.case_issue
                  where c.internal_id=case_issue.issue_case_internal_id
                    and issue_closed is null
                ) as has_open_issue
              FROM
                ${database.defaultSchemaName}.trouble_case c
                LEFT JOIN (
                  SELECT DISTINCT ON(snooze_case_internal_id) *
                  from ${database.defaultSchemaName}.case_snooze
                  order by snooze_case_internal_id, created_at desc
                ) s on s.snooze_case_internal_id = c.internal_id

